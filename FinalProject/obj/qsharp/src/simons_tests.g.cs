//------------------------------------------------------------------------------
// <auto-generated>                                                             
//     This code was generated by a tool.                                       
//     Changes to this file may cause incorrect behavior and will be lost if    
//     the code is regenerated.                                                 
// </auto-generated>                                                            
//------------------------------------------------------------------------------
#pragma warning disable 436
#pragma warning disable 162
#pragma warning disable 1591
using System;
using Microsoft.Quantum.Core;
using Microsoft.Quantum.Intrinsic;
using Microsoft.Quantum.Intrinsic.Interfaces;
using Microsoft.Quantum.Simulation.Core;

[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"example_oracle\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"input\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":32}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"output\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":44},\"Item2\":{\"Line\":1,\"Column\":50}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"example_oracle\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":10,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":25}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"IsLinearlyIndependent\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"matrix\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":38}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"IsLinearlyIndependent\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":18,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":31}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"AddVectors\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":53,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"a\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":21},\"Item2\":{\"Line\":1,\"Column\":22}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"b\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":32},\"Item2\":{\"Line\":1,\"Column\":33}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"AddVectors\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":53,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"Mod2Add\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Empty\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":58,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":17}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"pair\"]},\"Type\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":18},\"Item2\":{\"Line\":1,\"Column\":22}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"Mod2Add\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":58,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":17}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"SwapRows\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":18}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"matrix\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":19},\"Item2\":{\"Line\":1,\"Column\":25}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"row1\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":41}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"row2\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":49},\"Item2\":{\"Line\":1,\"Column\":53}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"SwapRows\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":64,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":18}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"ResultAsInt\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"result\"]},\"Type\":{\"Case\":\"Result\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":28}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"Result\"},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"ResultAsInt\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":71,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"ResultArrayAsInts\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":77,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":27}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"results\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":28},\"Item2\":{\"Line\":1,\"Column\":35}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Result\"}]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"ResultArrayAsInts\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":77,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":27}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"EqualArrays\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":81,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"arr1\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":22},\"Item2\":{\"Line\":1,\"Column\":26}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"arr2\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":36},\"Item2\":{\"Line\":1,\"Column\":40}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"EqualArrays\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":81,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":21}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"ContainsArray\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":94,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":23}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"matrix\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":24},\"Item2\":{\"Line\":1,\"Column\":30}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"array\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":42},\"Item2\":{\"Line\":1,\"Column\":47}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]]},\"ReturnType\":{\"Case\":\"Bool\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"ContainsArray\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":94,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":23}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"CountOccurrences\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":98,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"s\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":27},\"Item2\":{\"Line\":1,\"Column\":28}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"arr\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":37},\"Item2\":{\"Line\":1,\"Column\":40}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]}]}]]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"CountOccurrences\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":98,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Function\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"IndexOfMax\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Opaque\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":102,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"arr\"]},\"Type\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":1,\"Column\":21},\"Item2\":{\"Line\":1,\"Column\":24}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"ReturnType\":{\"Case\":\"Int\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"IndexOfMax\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":102,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":10},\"Item2\":{\"Line\":1,\"Column\":20}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"SimonsAlgorithm\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":115,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"op\"]},\"Type\":{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":2,\"Column\":9},\"Item2\":{\"Line\":2,\"Column\":11}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"n\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":3,\"Column\":9},\"Item2\":{\"Line\":3,\"Column\":10}}}]},{\"Case\":\"QsTupleItem\",\"Fields\":[{\"VariableName\":{\"Case\":\"ValidName\",\"Fields\":[\"numRuns\"]},\"Type\":{\"Case\":\"Int\"},\"InferredInformation\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Position\":{\"Case\":\"Null\"},\"Range\":{\"Item1\":{\"Line\":4,\"Column\":9},\"Item2\":{\"Line\":4,\"Column\":16}}}]}]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"Operation\",\"Fields\":[{\"Item1\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]},{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Qubit\"}]}]]},\"Item2\":{\"Case\":\"UnitType\"}},{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}]},{\"Case\":\"Int\"},{\"Case\":\"Int\"}]]},\"ReturnType\":{\"Case\":\"ArrayType\",\"Fields\":[{\"Case\":\"Int\"}]},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"SimonsAlgorithm\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":115,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":26}},\"Documentation\":[]}")]
[assembly: CallableDeclaration("{\"Kind\":{\"Case\":\"Operation\"},\"QualifiedName\":{\"Namespace\":\"Simons\",\"Name\":\"TestSimonsAlgorithm\"},\"Attributes\":[{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Diagnostics\",\"Name\":\"Test\",\"Range\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]}}]},\"TypeIdRange\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":2},\"Item2\":{\"Line\":1,\"Column\":6}}]},\"Argument\":{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"QuantumSimulator\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Value\",\"Fields\":[{\"Item1\":{\"Line\":1,\"Column\":7},\"Item2\":{\"Line\":1,\"Column\":25}}]}},\"Offset\":{\"Item1\":156,\"Item2\":4},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}},{\"TypeId\":{\"Case\":\"Value\",\"Fields\":[{\"Namespace\":\"Microsoft.Quantum.Targeting\",\"Name\":\"RequiresCapability\",\"Range\":{\"Case\":\"Null\"}}]},\"TypeIdRange\":{\"Case\":\"Null\"},\"Argument\":{\"Item1\":{\"Case\":\"ValueTuple\",\"Fields\":[[{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Transparent\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Full\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},{\"Item1\":{\"Case\":\"StringLiteral\",\"Fields\":[\"Inferred automatically by the compiler.\",[]]},\"Item2\":[],\"Item3\":{\"Case\":\"String\"},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}}]]},\"Item2\":[],\"Item3\":{\"Case\":\"TupleType\",\"Fields\":[[{\"Case\":\"String\"},{\"Case\":\"String\"},{\"Case\":\"String\"}]]},\"Item4\":{\"IsMutable\":false,\"HasLocalQuantumDependency\":false},\"Item5\":{\"Case\":\"Null\"}},\"Offset\":{\"Item1\":0,\"Item2\":0},\"Comments\":{\"OpeningComments\":[],\"ClosingComments\":[]}}],\"Modifiers\":{\"Access\":{\"Case\":\"DefaultAccess\"}},\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":157,\"Item2\":4},\"SymbolRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"ArgumentTuple\":{\"Case\":\"QsTuple\",\"Fields\":[[]]},\"Signature\":{\"TypeParameters\":[],\"ArgumentType\":{\"Case\":\"UnitType\"},\"ReturnType\":{\"Case\":\"UnitType\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}}},\"Documentation\":[]}")]
[assembly: SpecializationDeclaration("{\"Kind\":{\"Case\":\"QsBody\"},\"TypeArguments\":{\"Case\":\"Null\"},\"Information\":{\"Characteristics\":{\"Case\":\"EmptySet\"},\"InferredInformation\":{\"IsSelfAdjoint\":false,\"IsIntrinsic\":false}},\"Parent\":{\"Namespace\":\"Simons\",\"Name\":\"TestSimonsAlgorithm\"},\"Attributes\":[],\"SourceFile\":\"C:\\\\Users\\\\Jake\\\\Quantum-Computing\\\\FinalProject\\\\simons_tests.qs\",\"Position\":{\"Item1\":157,\"Item2\":4},\"HeaderRange\":{\"Item1\":{\"Line\":1,\"Column\":11},\"Item2\":{\"Line\":1,\"Column\":30}},\"Documentation\":[]}")]
#line hidden
namespace Simons
{
    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 11, 19)]
    public partial class example_oracle : Operation<(IQArray<Qubit>,IQArray<Qubit>), QVoid>, ICallable
    {
        public example_oracle(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Qubit>,IQArray<Qubit>)>, IApplyData
        {
            public In((IQArray<Qubit>,IQArray<Qubit>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return Qubit.Concat(((IApplyData)Data.Item1)?.Qubits, ((IApplyData)Data.Item2)?.Qubits);
                }
            }
        }

        String ICallable.Name => "example_oracle";
        String ICallable.FullName => "Simons.example_oracle";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected IUnitary<(Qubit,Qubit)> Microsoft__Quantum__Intrinsic__CNOT
        {
            get;
            set;
        }

        public override Func<(IQArray<Qubit>,IQArray<Qubit>), QVoid> __Body__ => (__in__) =>
        {
            var (input,output) = __in__;
#line 13 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            foreach (var i in new QRange(0L, (input.Length - 1L)))
#line hidden
            {
#line 14 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                Microsoft__Quantum__Intrinsic__CNOT.Apply((input[i], output[i]));
            }

#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Intrinsic__CNOT = this.__Factory__.Get<IUnitary<(Qubit,Qubit)>>(typeof(global::Microsoft.Quantum.Intrinsic.CNOT));
        }

        public override IApplyData __DataIn__((IQArray<Qubit>,IQArray<Qubit>) data) => new In(data);
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__, IQArray<Qubit> input, IQArray<Qubit> output)
        {
            return __m__.Run<example_oracle, (IQArray<Qubit>,IQArray<Qubit>), QVoid>((input, output));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 19, 54)]
    public partial class IsLinearlyIndependent : Function<IQArray<IQArray<Int64>>, Boolean>, ICallable
    {
        public IsLinearlyIndependent(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IsLinearlyIndependent";
        String ICallable.FullName => "Simons.IsLinearlyIndependent";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,Int64,Int64), IQArray<IQArray<Int64>>> SwapRows__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>> AddVectors__
        {
            get;
            set;
        }

        public override Func<IQArray<IQArray<Int64>>, Boolean> __Body__ => (__in__) =>
        {
            var matrix = __in__;
#line 20 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var numRows = matrix.Length;
#line 21 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var numCols = matrix[0L].Length;
#line 24 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var col = 0L;
#line 25 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var pivotFound = false;
#line 26 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var current_matrix = new QArray<IQArray<Int64>>(matrix);
#line 27 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            while (true)
            {
#line 28 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                pivotFound = false;
#line 29 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                foreach (var row in new QRange(col, (numRows - 1L)))
#line hidden
                {
#line 30 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    if ((matrix[row][col] == 1L))
                    {
#line 31 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                        pivotFound = true;
#line 33 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                        if ((row != col))
                        {
#line 34 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                            current_matrix = new QArray<IQArray<Int64>>(SwapRows__.Apply((matrix, col, row)));
                        }

#line 38 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                        foreach (var otherRow in new QRange(0L, (numRows - 1L)))
#line hidden
                        {
#line 39 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                            if (((otherRow != col) && (matrix[otherRow][col] == 1L)))
                            {
#line 40 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                                current_matrix.Modify(otherRow, AddVectors__.Apply((matrix[otherRow], matrix[col])));
                            }
                        }
                    }
                }

#line 45 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                col = (col + 1L);
                if ((pivotFound || (col >= numCols)))
                {
                    break;
                }
                else
                {
                }
            }

#line 49 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return (col == numCols);
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.SwapRows__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,Int64,Int64), IQArray<IQArray<Int64>>>>(typeof(SwapRows));
            this.AddVectors__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>>>(typeof(AddVectors));
        }

        public override IApplyData __DataIn__(IQArray<IQArray<Int64>> data) => data;
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> matrix)
        {
            return __m__.Run<IsLinearlyIndependent, IQArray<IQArray<Int64>>, Boolean>(matrix);
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 54, 59)]
    public partial class AddVectors : Function<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>>, ICallable
    {
        public AddVectors(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,IQArray<Int64>)>, IApplyData
        {
            public In((IQArray<Int64>,IQArray<Int64>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "AddVectors";
        String ICallable.FullName => "Simons.AddVectors";
        protected ICallable Microsoft__Quantum__Arrays__Mapped
        {
            get;
            set;
        }

        protected ICallable<(Int64,Int64), Int64> Mod2Add__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Zip
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>> __Body__ => (__in__) =>
        {
            var (a,b) = __in__;
#line 55 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return Microsoft__Quantum__Arrays__Mapped.Apply<IQArray<Int64>>((Mod2Add__, Microsoft__Quantum__Arrays__Zip.Apply<IQArray<(Int64,Int64)>>((a, b))));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays__Mapped = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Mapped<,>));
            this.Mod2Add__ = this.__Factory__.Get<ICallable<(Int64,Int64), Int64>>(typeof(Mod2Add));
            this.Microsoft__Quantum__Arrays__Zip = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Zip<,>));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,IQArray<Int64>) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Int64> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Int64>> Run(IOperationFactory __m__, IQArray<Int64> a, IQArray<Int64> b)
        {
            return __m__.Run<AddVectors, (IQArray<Int64>,IQArray<Int64>), IQArray<Int64>>((a, b));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 59, 65)]
    public partial class Mod2Add : Function<(Int64,Int64), Int64>, ICallable
    {
        public Mod2Add(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(Int64,Int64)>, IApplyData
        {
            public In((Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "Mod2Add";
        String ICallable.FullName => "Simons.Mod2Add";
        public override Func<(Int64,Int64), Int64> __Body__ => (__in__) =>
        {
            var pair = __in__;
#line 60 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var (a,b) = pair;
#line 61 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return ((a + b) % 2L);
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__((Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, (Int64,Int64) pair)
        {
            return __m__.Run<Mod2Add, (Int64,Int64), Int64>((pair));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 65, 72)]
    public partial class SwapRows : Function<(IQArray<IQArray<Int64>>,Int64,Int64), IQArray<IQArray<Int64>>>, ICallable
    {
        public SwapRows(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Int64>>,Int64,Int64)>, IApplyData
        {
            public In((IQArray<IQArray<Int64>>,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "SwapRows";
        String ICallable.FullName => "Simons.SwapRows";
        public override Func<(IQArray<IQArray<Int64>>,Int64,Int64), IQArray<IQArray<Int64>>> __Body__ => (__in__) =>
        {
            var (matrix,row1,row2) = __in__;
#line 66 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var newMatrix = new QArray<IQArray<Int64>>(matrix);
#line 67 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            newMatrix.Modify(row1, matrix[row2]);
#line 68 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            newMatrix.Modify(row2, matrix[row1]);
#line 69 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return newMatrix;
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Int64>>,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<IQArray<Int64>> data) => data;
        public static System.Threading.Tasks.Task<IQArray<IQArray<Int64>>> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> matrix, Int64 row1, Int64 row2)
        {
            return __m__.Run<SwapRows, (IQArray<IQArray<Int64>>,Int64,Int64), IQArray<IQArray<Int64>>>((matrix, row1, row2));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 72, 78)]
    public partial class ResultAsInt : Function<Result, Int64>, ICallable
    {
        public ResultAsInt(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ResultAsInt";
        String ICallable.FullName => "Simons.ResultAsInt";
        public override Func<Result, Int64> __Body__ => (__in__) =>
        {
            var result = __in__;
#line 73 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var int_result = ((result == Result.One) ? 1L : 0L);
#line 74 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return int_result;
        }

        ;
        public override void __Init__()
        {
        }

        public override IApplyData __DataIn__(Result data) => new QTuple<Result>(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, Result result)
        {
            return __m__.Run<ResultAsInt, Result, Int64>(result);
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 78, 82)]
    public partial class ResultArrayAsInts : Function<IQArray<Result>, IQArray<Int64>>, ICallable
    {
        public ResultArrayAsInts(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "ResultArrayAsInts";
        String ICallable.FullName => "Simons.ResultArrayAsInts";
        protected ICallable Microsoft__Quantum__Arrays__Mapped
        {
            get;
            set;
        }

        protected ICallable<Result, Int64> ResultAsInt__
        {
            get;
            set;
        }

        public override Func<IQArray<Result>, IQArray<Int64>> __Body__ => (__in__) =>
        {
            var results = __in__;
#line 79 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return Microsoft__Quantum__Arrays__Mapped.Apply<IQArray<Int64>>((ResultAsInt__, results));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays__Mapped = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Mapped<,>));
            this.ResultAsInt__ = this.__Factory__.Get<ICallable<Result, Int64>>(typeof(ResultAsInt));
        }

        public override IApplyData __DataIn__(IQArray<Result> data) => data;
        public override IApplyData __DataOut__(IQArray<Int64> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Int64>> Run(IOperationFactory __m__, IQArray<Result> results)
        {
            return __m__.Run<ResultArrayAsInts, IQArray<Result>, IQArray<Int64>>(results);
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 82, 95)]
    public partial class EqualArrays : Function<(IQArray<Int64>,IQArray<Int64>), Boolean>, ICallable
    {
        public EqualArrays(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,IQArray<Int64>)>, IApplyData
        {
            public In((IQArray<Int64>,IQArray<Int64>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "EqualArrays";
        String ICallable.FullName => "Simons.EqualArrays";
        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,IQArray<Int64>), Boolean> __Body__ => (__in__) =>
        {
            var (arr1,arr2) = __in__;
#line 83 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            if ((arr1.Length != arr2.Length))
            {
#line 84 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                return false;
            }

#line 86 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            foreach (var i in new QRange(0L, (arr1.Length - 1L)))
#line hidden
            {
#line 87 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                if ((arr1[i] != arr2[i]))
                {
#line 88 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    return false;
                }
            }

#line 91 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return true;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,IQArray<Int64>) data) => new In(data);
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<Int64> arr1, IQArray<Int64> arr2)
        {
            return __m__.Run<EqualArrays, (IQArray<Int64>,IQArray<Int64>), Boolean>((arr1, arr2));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 95, 99)]
    public partial class ContainsArray : Function<(IQArray<IQArray<Int64>>,IQArray<Int64>), Boolean>, ICallable
    {
        public ContainsArray(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<IQArray<Int64>>,IQArray<Int64>)>, IApplyData
        {
            public In((IQArray<IQArray<Int64>>,IQArray<Int64>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "ContainsArray";
        String ICallable.FullName => "Simons.ContainsArray";
        protected ICallable Microsoft__Quantum__Arrays__Any
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<Int64>), Boolean> EqualArrays__
        {
            get;
            set;
        }

        public override Func<(IQArray<IQArray<Int64>>,IQArray<Int64>), Boolean> __Body__ => (__in__) =>
        {
            var (matrix,array) = __in__;
#line 96 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return Microsoft__Quantum__Arrays__Any.Apply<Boolean>((EqualArrays__.Partial(new Func<IQArray<Int64>, (IQArray<Int64>,IQArray<Int64>)>((__arg1__) => (__arg1__, array))), matrix));
        }

        ;
        public override void __Init__()
        {
            this.Microsoft__Quantum__Arrays__Any = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Any<>));
            this.EqualArrays__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<Int64>), Boolean>>(typeof(EqualArrays));
        }

        public override IApplyData __DataIn__((IQArray<IQArray<Int64>>,IQArray<Int64>) data) => new In(data);
        public override IApplyData __DataOut__(Boolean data) => new QTuple<Boolean>(data);
        public static System.Threading.Tasks.Task<Boolean> Run(IOperationFactory __m__, IQArray<IQArray<Int64>> matrix, IQArray<Int64> array)
        {
            return __m__.Run<ContainsArray, (IQArray<IQArray<Int64>>,IQArray<Int64>), Boolean>((matrix, array));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 99, 103)]
    public partial class CountOccurrences : Function<(IQArray<Int64>,IQArray<IQArray<Int64>>), Int64>, ICallable
    {
        public CountOccurrences(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(IQArray<Int64>,IQArray<IQArray<Int64>>)>, IApplyData
        {
            public In((IQArray<Int64>,IQArray<IQArray<Int64>>) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits => null;
        }

        String ICallable.Name => "CountOccurrences";
        String ICallable.FullName => "Simons.CountOccurrences";
        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable Microsoft__Quantum__Arrays__Filtered
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<Int64>), Boolean> EqualArrays__
        {
            get;
            set;
        }

        public override Func<(IQArray<Int64>,IQArray<IQArray<Int64>>), Int64> __Body__ => (__in__) =>
        {
            var (s,arr) = __in__;
#line 100 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return Microsoft__Quantum__Arrays__Filtered.Apply<IQArray<IQArray<Int64>>>((EqualArrays__.Partial(new Func<IQArray<Int64>, (IQArray<Int64>,IQArray<Int64>)>((__arg1__) => (s, __arg1__))), arr)).Length;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.Microsoft__Quantum__Arrays__Filtered = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Arrays.Filtered<>));
            this.EqualArrays__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<Int64>), Boolean>>(typeof(EqualArrays));
        }

        public override IApplyData __DataIn__((IQArray<Int64>,IQArray<IQArray<Int64>>) data) => new In(data);
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, IQArray<Int64> s, IQArray<IQArray<Int64>> arr)
        {
            return __m__.Run<CountOccurrences, (IQArray<Int64>,IQArray<IQArray<Int64>>), Int64>((s, arr));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 103, 116)]
    public partial class IndexOfMax : Function<IQArray<Int64>, Int64>, ICallable
    {
        public IndexOfMax(IOperationFactory m) : base(m)
        {
        }

        String ICallable.Name => "IndexOfMax";
        String ICallable.FullName => "Simons.IndexOfMax";
        protected ICallable Length__
        {
            get;
            set;
        }

        public override Func<IQArray<Int64>, Int64> __Body__ => (__in__) =>
        {
            var arr = __in__;
#line 104 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var maxIndex = 0L;
#line 105 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var maxValue = arr[0L];
#line 106 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            foreach (var i in new QRange(1L, (arr.Length - 1L)))
#line hidden
            {
#line 107 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                if ((arr[i] > maxValue))
                {
#line 108 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    maxIndex = i;
#line 109 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    maxValue = arr[i];
                }
            }

#line 112 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return maxIndex;
        }

        ;
        public override void __Init__()
        {
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
        }

        public override IApplyData __DataIn__(IQArray<Int64> data) => data;
        public override IApplyData __DataOut__(Int64 data) => new QTuple<Int64>(data);
        public static System.Threading.Tasks.Task<Int64> Run(IOperationFactory __m__, IQArray<Int64> arr)
        {
            return __m__.Run<IndexOfMax, IQArray<Int64>, Int64>(arr);
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 116, 158)]
    public partial class SimonsAlgorithm : Operation<(ICallable,Int64,Int64), IQArray<Int64>>, ICallable
    {
        public SimonsAlgorithm(IOperationFactory m) : base(m)
        {
        }

        public class In : QTuple<(ICallable,Int64,Int64)>, IApplyData
        {
            public In((ICallable,Int64,Int64) data) : base(data)
            {
            }

            System.Collections.Generic.IEnumerable<Qubit> IApplyData.Qubits
            {
                get
                {
                    return ((IApplyData)Data.Item1)?.Qubits;
                }
            }
        }

        String ICallable.Name => "SimonsAlgorithm";
        String ICallable.FullName => "Simons.SimonsAlgorithm";
        protected ICallable<(ICallable,Int64), IQArray<Result>> quantum_simons_algorithm__
        {
            get;
            set;
        }

        protected ICallable<IQArray<Result>, IQArray<Int64>> ResultArrayAsInts__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<IQArray<Int64>>,IQArray<Int64>), Boolean> ContainsArray__
        {
            get;
            set;
        }

        protected ICallable<IQArray<IQArray<Int64>>, Boolean> IsLinearlyIndependent__
        {
            get;
            set;
        }

        protected ICallable Length__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>> AddVectors__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<IQArray<Int64>>), Int64> CountOccurrences__
        {
            get;
            set;
        }

        public override Func<(ICallable,Int64,Int64), IQArray<Int64>> __Body__ => (__in__) =>
        {
            var (op,n,numRuns) = __in__;
#line 121 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var secretStrings = QArray<IQArray<Int64>>.Create(0L);
#line 122 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            foreach (var __arg1__ in new QRange(1L, numRuns))
#line hidden
            {
#line 123 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                var results = QArray<IQArray<Int64>>.Create(0L);
#line 125 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                while (true)
                {
#line 126 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    var result = (IQArray<Result>)quantum_simons_algorithm__.Apply((op, n));
#line 127 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    var resultAsInts = (IQArray<Int64>)ResultArrayAsInts__.Apply(result);
#line 128 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    if (!(ContainsArray__.Apply((results?.Copy(), resultAsInts))))
                    {
#line 129 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                        var tempResults = (IQArray<IQArray<Int64>>)QArray<IQArray<Int64>>.Add(results, new QArray<IQArray<Int64>>(resultAsInts));
#line 130 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                        if (IsLinearlyIndependent__.Apply(tempResults))
                        {
#line 131 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                            results = new QArray<IQArray<Int64>>(tempResults);
                        }
                    }

                    if ((results.Length == (n - 1L)))
                    {
                        break;
                    }
                    else
                    {
                    }
                }

#line 138 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                var s = (IQArray<Int64>)AddVectors__.Apply((results[0L], results[1L]));
#line 139 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                secretStrings = QArray<IQArray<Int64>>.Add(secretStrings, new QArray<IQArray<Int64>>(s));
            }

#line 144 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var maxCount = 0L;
#line 145 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var mostFrequentSecretString = new QArray<Int64>(secretStrings[0L]);
#line 146 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            foreach (var s in secretStrings?.Copy())
#line hidden
            {
#line 147 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                var count = CountOccurrences__.Apply((s, secretStrings?.Copy()));
#line 148 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                if ((count > maxCount))
                {
#line 149 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    maxCount = count;
#line 150 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    mostFrequentSecretString = new QArray<Int64>(s);
                }
            }

#line 154 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            return mostFrequentSecretString;
        }

        ;
        public override void __Init__()
        {
            this.quantum_simons_algorithm__ = this.__Factory__.Get<ICallable<(ICallable,Int64), IQArray<Result>>>(typeof(quantum_simons_algorithm));
            this.ResultArrayAsInts__ = this.__Factory__.Get<ICallable<IQArray<Result>, IQArray<Int64>>>(typeof(ResultArrayAsInts));
            this.ContainsArray__ = this.__Factory__.Get<ICallable<(IQArray<IQArray<Int64>>,IQArray<Int64>), Boolean>>(typeof(ContainsArray));
            this.IsLinearlyIndependent__ = this.__Factory__.Get<ICallable<IQArray<IQArray<Int64>>, Boolean>>(typeof(IsLinearlyIndependent));
            this.Length__ = this.__Factory__.Get<ICallable>(typeof(global::Microsoft.Quantum.Core.Length<>));
            this.AddVectors__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<Int64>), IQArray<Int64>>>(typeof(AddVectors));
            this.CountOccurrences__ = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<IQArray<Int64>>), Int64>>(typeof(CountOccurrences));
        }

        public override IApplyData __DataIn__((ICallable,Int64,Int64) data) => new In(data);
        public override IApplyData __DataOut__(IQArray<Int64> data) => data;
        public static System.Threading.Tasks.Task<IQArray<Int64>> Run(IOperationFactory __m__, ICallable op, Int64 n, Int64 numRuns)
        {
            return __m__.Run<SimonsAlgorithm, (ICallable,Int64,Int64), IQArray<Int64>>((op, n, numRuns));
        }
    }

    [SourceLocation("C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs", OperationFunctor.Body, 158, -1)]
    public partial class TestSimonsAlgorithm : Operation<QVoid, QVoid>, ICallable
    {
        public TestSimonsAlgorithm(IOperationFactory m) : base(m)
        {
        }

        public class QuantumSimulator
        {
            public QuantumSimulator(Xunit.Abstractions.ITestOutputHelper Output)
            {
                this.Output = Output;
            }

            internal Xunit.Abstractions.ITestOutputHelper Output
            {
                get;
            }

            [Xunit.Fact()]
            [Xunit.Trait("Target", "QuantumSimulator")]
            [Xunit.Trait("Name", "TestSimonsAlgorithm")]
            public void TestSimonsAlgorithm()
#line 158 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            {
                var sim = new Microsoft.Quantum.Simulation.Simulators.QuantumSimulator();
                if (sim is Microsoft.Quantum.Simulation.Common.SimulatorBase baseSim && this.Output != null)
                {
                    baseSim.OnLog += this.Output.WriteLine;
                }

                try
                {
                    sim.Execute<TestSimonsAlgorithm, QVoid, QVoid>(QVoid.Instance);
                }
                catch
                {
#line 158 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
                    Xunit.Assert.True(false, "Q# Test failed. For details see the Standard output below.");
                }
                finally
                {
                    if (sim is IDisposable disposeSim)
                    {
                        disposeSim.Dispose();
                    }
                }
            }
        }

        String ICallable.Name => "TestSimonsAlgorithm";
        String ICallable.FullName => "Simons.TestSimonsAlgorithm";
        protected ICallable<(ICallable,Int64,Int64), IQArray<Int64>> SimonsAlgorithm__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid> LeftShiftBy1__
        {
            get;
            set;
        }

        protected ICallable<(IQArray<Int64>,IQArray<Int64>,String), QVoid> Microsoft__Quantum__Diagnostics__AllEqualityFactI
        {
            get;
            set;
        }

        protected ICallable<String, QVoid> Message__
        {
            get;
            set;
        }

        public override Func<QVoid, QVoid> __Body__ => (__in__) =>
        {
#line 159 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var expected_s = (IQArray<Int64>)new QArray<Int64>(0L, 0L, 1L);
#line 160 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var n = 3L;
#line 161 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var numRuns = 16L;
#line 162 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            var s = (IQArray<Int64>)SimonsAlgorithm__.Apply((LeftShiftBy1__, n, numRuns));
#line 164 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            Microsoft__Quantum__Diagnostics__AllEqualityFactI.Apply((s, expected_s, String.Format("String {0} doesn't match expected {1}", s, expected_s)));
#line 167 "C:\\Users\\Jake\\Quantum-Computing\\FinalProject\\simons_tests.qs"
            Message__.Apply("Strings match");
#line hidden
            return QVoid.Instance;
        }

        ;
        public override void __Init__()
        {
            this.SimonsAlgorithm__ = this.__Factory__.Get<ICallable<(ICallable,Int64,Int64), IQArray<Int64>>>(typeof(SimonsAlgorithm));
            this.LeftShiftBy1__ = this.__Factory__.Get<ICallable<(IQArray<Qubit>,IQArray<Qubit>), QVoid>>(typeof(LeftShiftBy1));
            this.Microsoft__Quantum__Diagnostics__AllEqualityFactI = this.__Factory__.Get<ICallable<(IQArray<Int64>,IQArray<Int64>,String), QVoid>>(typeof(global::Microsoft.Quantum.Diagnostics.AllEqualityFactI));
            this.Message__ = this.__Factory__.Get<ICallable<String, QVoid>>(typeof(global::Microsoft.Quantum.Intrinsic.Message));
        }

        public override IApplyData __DataIn__(QVoid data) => data;
        public override IApplyData __DataOut__(QVoid data) => data;
        public static System.Threading.Tasks.Task<QVoid> Run(IOperationFactory __m__)
        {
            return __m__.Run<TestSimonsAlgorithm, QVoid, QVoid>(QVoid.Instance);
        }
    }
}